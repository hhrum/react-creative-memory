{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/BackButton.jsx","layouts/DefaultLayout.jsx","components/SecondaryButton.js","pages/Home.jsx","redux/game/gameTypes.js","redux/timer/timerTypes.js","redux/board/boardTypes.js","redux/board/boardActions.js","redux/alert/alertTypes.js","redux/alert/alertActions.js","utils/timerHelper.js","redux/game/gameActions.js","redux/timer/timerActions.js","components/Memory/MemoryItem.jsx","components/Memory/MemoryBoard.jsx","components/Memory/MemoryTimer.jsx","pages/Memory.jsx","components/Alert.jsx","pages/History.jsx","App.jsx","redux/types.js","data/cards.js","redux/game/gameInitialState.js","utils/gameHelpers.js","redux/game/gameReducer.js","redux/timer/timerInitialState.js","redux/timer/timerReducer.js","utils/boardHelpers.js","redux/board/boardInitialState.js","redux/board/boardReducer.js","redux/alert/alertInitialState.js","redux/alert/alertReducer.js","redux/rootReducer.js","index.js"],"names":["Button","title","onClick","className","Header","left","center","right","BackButton","children","history","useHistory","e","preventDefault","push","DefaultLayout","location","useLocation","pathname","style","textAlign","SecondaryButton","Home","START_SESSION","END_SESSION","FOUND_CARD","SET_ACTIVE_ITEM","INIT_TIMER","CLOSE_TIMER","INCREMENT_TIME","DROP_TIME","GENERATE_BOARD","OPEN_ITEM","CLOSE_ITEM","closeItems","items","dispatch","setTimeout","forEach","item","type","payload","closeItem","SHOW_ALERT","HIDE_ALERT","showAlert","alert","convertTimeToMinutesAndSeconds","time","m","Math","floor","s","startGame","getState","game","timer","gameSessionIsExist","interval","setInterval","initTimer","pauseGame","clearInterval","endGame","content","clickItem","card","openItem","active","setActiveItem","value","cardsToFind","length","MemoryItem","open","useDispatch","isOpen","BoardRow","row","map","index","MemoryBoard","board","useSelector","state","useState","setOpen","useEffect","MemoryTimer","marginBottom","Memory","Alert","show","History","App","useRouteMatch","path","DEFAULT","cards","Array","fill","_","gameInitialState","reducers","filter","timerInitialState","generateCleanBoard","el","setItemOnBoard","positions","rand","random","splice","x","y","generateItem","changeItemOnBoard","newRow","newBoard","boardInitialState","col","alertInitialState","rootReducer","combineReducers","action","reducer","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","app","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.f2260fb6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Button = ({ title, onClick }) => (\r\n  <button onClick={onClick} className=\"button\">{title}</button>\r\n);\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport const Header = ({ left, center, right }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">{left}</div>\r\n      <div className=\"header__center\">{center}</div>\r\n      <div className=\"header__right\">{right}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const BackButton = ({children}) => {\r\n    const history = useHistory();\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div onClick={onClick}>{children || \"Назад\"}</div>\r\n    );\r\n}","import {useLocation} from 'react-router-dom';\r\n\r\nimport {Header} from \"../components/Header\";\r\nimport {BackButton} from \"../components/BackButton\";\r\n\r\nimport './DefaultLayout.css'\r\n\r\nexport const DefaultLayout = ({children}) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"default-layout\">\r\n      <Header\r\n        left={location.pathname !== '/' ? <BackButton/> : null}\r\n        center={<h2 style={{textAlign: \"center\"}}>Memory</h2>}/>\r\n      <div className=\"default-layout__content\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport const SecondaryButton = ({ title, onClick }) => (\r\n  <button onClick={onClick} className=\"button button--secondary\">{title}</button>\r\n);","import {useHistory} from \"react-router-dom\";\r\nimport {Button} from \"../components/Button\";\r\nimport {DefaultLayout} from \"../layouts/DefaultLayout\";\r\n\r\nimport \"./Home.css\";\r\nimport {SecondaryButton} from \"../components/SecondaryButton\";\r\n\r\nexport const Home = () => {\r\n  const history = useHistory();\r\n\r\n  const onClickPlayHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push('/memory');\r\n  }\r\n\r\n  const onClickHistoryHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push('/history');\r\n  }\r\n\r\n  return (\r\n    <DefaultLayout>\r\n      <div className=\"home\">\r\n        <h3 className=\"home__title\">\r\n          Добро пожаловать! <br/> Хотите начать игру?\r\n        </h3>\r\n        <div className=\"home__btns\">\r\n          <Button\r\n            onClick={onClickPlayHandler}\r\n            title=\"Играть\"/>\r\n          <SecondaryButton\r\n            onClick={onClickHistoryHandler}\r\n            title=\"История игр\"/>\r\n        </div>\r\n      </div>\r\n    </DefaultLayout>\r\n  );\r\n};\r\n","export const START_SESSION = \"game/START_SESSION\";\r\nexport const END_SESSION = \"game/END_SESSION\";\r\n\r\nexport const FOUND_CARD = \"game/FOUND_CARD\";\r\n\r\nexport const SET_ACTIVE_ITEM = \"game/SET_ACTIVE_ITEM\";","export const INIT_TIMER = \"timer/INIT_TIMER\";\r\nexport const CLOSE_TIMER = \"timer/CLOSE_TIMER\";\r\nexport const INCREMENT_TIME = \"timer/INCREMENT_TIME\";\r\nexport const DROP_TIME = \"timer/DROP_TIME\";","export const GENERATE_BOARD = \"board/GENERATE_BOARD\";\r\n\r\nexport const OPEN_ITEM = \"board/OPEN_ITEM\";\r\nexport const CLOSE_ITEM = \"board/CLOSE_ITEM\";","import {CLOSE_ITEM, GENERATE_BOARD, OPEN_ITEM} from \"./boardTypes\";\r\n\r\nexport function generateBoard() {\r\n  return {\r\n    type: GENERATE_BOARD\r\n  };\r\n}\r\n\r\nexport function openItem(item) {\r\n  return {\r\n    type: OPEN_ITEM,\r\n    payload: item\r\n  }\r\n}\r\n\r\nexport function closeItems(items) {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      items.forEach(item => {\r\n        dispatch(closeItem(item));\r\n      });\r\n    }, 500);\r\n  }\r\n}\r\n\r\nexport function closeItem(item) {\r\n  return {\r\n    type: CLOSE_ITEM,\r\n    payload: item\r\n  }\r\n}","export const SHOW_ALERT = \"alert/SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"alert/HIDE_ALERT\";","import {HIDE_ALERT, SHOW_ALERT} from \"./alertTypes\";\r\n\r\nexport function showAlert(alert) {\r\n  return (dispatch) => {\r\n    dispatch({type: SHOW_ALERT, payload: alert});\r\n    setTimeout(() => dispatch(hideAlert()), 5000)\r\n  }\r\n}\r\n\r\nexport function hideAlert() {\r\n  return {\r\n    type: HIDE_ALERT\r\n  }\r\n}","export const convertTimeToMinutesAndSeconds = (time) => {\r\n  const m = Math.floor(time / 60);\r\n  const s = time % 60;\r\n\r\n  return `${m < 10 ? `0${m}` : m}:${s < 10 ? `0${s}` : s}`;\r\n}","import {END_SESSION, FOUND_CARD, SET_ACTIVE_ITEM, START_SESSION} from \"./gameTypes\";\r\nimport {closeTimer, incrementTime, initTimer} from \"../timer/timerActions\";\r\nimport {generateBoard, openItem, closeItems} from \"../board/boardActions\";\r\nimport {showAlert} from \"../alert/alertActions\";\r\nimport {convertTimeToMinutesAndSeconds} from \"../../utils/timerHelper\";\r\n\r\n// TODO: Переписать\r\nexport function startGame() {\r\n  return (dispatch, getState) => {\r\n    const {game, timer} = getState();\r\n\r\n    if (!game.gameSessionIsExist) {\r\n      dispatch(startSession());\r\n      dispatch(generateBoard());\r\n    }\r\n\r\n    if (!timer.interval) {\r\n      const interval = setInterval(() => dispatch(incrementTime()), 1000);\r\n      dispatch(initTimer(interval));\r\n    }\r\n  }\r\n}\r\n\r\nexport function pauseGame() {\r\n  return (dispatch, getState) => {\r\n    const {timer} = getState();\r\n    clearInterval(timer.interval);\r\n    dispatch(closeTimer());\r\n  }\r\n}\r\n\r\nexport function endGame() {\r\n  return (dispatch, getState) => {\r\n    const {timer} = getState();\r\n\r\n    dispatch(pauseGame());\r\n    dispatch(showAlert({title: \"Победа!\", content: `Вы нашли все карточка за ${convertTimeToMinutesAndSeconds(timer.time)}`}))\r\n    dispatch(endSession());\r\n  }\r\n}\r\n\r\nexport function startSession() {\r\n  return {\r\n    type: START_SESSION\r\n  }\r\n}\r\n\r\nexport function endSession() {\r\n  return {\r\n    type: END_SESSION\r\n  }\r\n}\r\n\r\nexport function clickItem(item) {\r\n  return (dispatch, getState) => {\r\n    const {game} = getState();\r\n\r\n    dispatch(openItem(item));\r\n\r\n    if (!game.active) {\r\n      dispatch(setActiveItem((item)));\r\n      return null;\r\n    }\r\n\r\n    if (game.active.card.value === item.card.value) {\r\n      dispatch(foundCard(item.card));\r\n      dispatch(checkFinishGame());\r\n    } else {\r\n      dispatch(closeItems([game.active, item]));\r\n    }\r\n\r\n    dispatch(setActiveItem(null));\r\n  }\r\n}\r\n\r\nexport function foundCard(card) {\r\n  return {\r\n    type: FOUND_CARD,\r\n    payload: card\r\n  }\r\n}\r\n\r\nexport function checkFinishGame() {\r\n  return (dispatch, getState) => {\r\n    const {game} = getState();\r\n    if (game.cardsToFind.length === 0) {\r\n      dispatch(endGame());\r\n    }\r\n  }\r\n}\r\n\r\nexport function setActiveItem(item) {\r\n  return {\r\n    type: SET_ACTIVE_ITEM,\r\n    payload: item\r\n  }\r\n}","import {CLOSE_TIMER, DROP_TIME, INCREMENT_TIME, INIT_TIMER} from \"./timerTypes\";\r\n\r\nexport function initTimer(interval) {\r\n  return {\r\n    type: INIT_TIMER,\r\n    payload: interval\r\n  }\r\n}\r\n\r\nexport function closeTimer() {\r\n  return {\r\n    type: CLOSE_TIMER\r\n  }\r\n}\r\n\r\nexport function incrementTime() {\r\n  return {\r\n    type: INCREMENT_TIME\r\n  }\r\n}\r\n\r\nexport function dropTime() {\r\n  return {\r\n    type: DROP_TIME\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport './MemoryItem.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {clickItem} from \"../../redux/game/gameActions\";\r\n\r\nexport const MemoryItem = ({open, item}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  if (!item)\r\n    return null;\r\n\r\n  const onClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!item.isOpen) {\r\n      dispatch(clickItem(item));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"memory-item\" onClick={onClickHandler}>\r\n      {open || item.isOpen ? item.card.value : null}\r\n    </div>\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {MemoryItem} from \"./MemoryItem\";\r\n\r\nimport \"./MemoryBoard.css\";\r\n\r\nconst BoardRow = ({open, row}) => {\r\n  return (\r\n    <div className=\"board__row\">\r\n      {row.map((item, index) => <MemoryItem open={open} item={item} key={index}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const MemoryBoard = () => {\r\n  const board = useSelector(state => state.board.board);\r\n  const [open, setOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setOpen(false), 3000)\r\n  });\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {board.map((row, index) => <BoardRow open={open} row={row} key={index}/>)}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {convertTimeToMinutesAndSeconds} from \"../../utils/timerHelper\";\r\n\r\nexport const MemoryTimer = () => {\r\n  const time = useSelector(state => state.timer.time);\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{marginBottom: 32}}>Времени уже прошло: {convertTimeToMinutesAndSeconds(time)} </h3>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport {DefaultLayout} from \"../layouts/DefaultLayout\";\r\nimport {MemoryBoard} from \"../components/Memory/MemoryBoard\";\r\nimport './Memory.css';\r\nimport {MemoryTimer} from \"../components/Memory/MemoryTimer\";\r\n\r\nexport const Memory = () => {\r\n\r\n  return (\r\n    <DefaultLayout>\r\n      <div className=\"memory\">\r\n        <MemoryTimer/>\r\n        <MemoryBoard/>\r\n      </div>\r\n    </DefaultLayout>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Alert.css\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const Alert = () => {\r\n  const alert = useSelector(state => state.alert);\r\n\r\n  if (!alert.show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"alert-wrapper\">\r\n      <div className=\"alert\">\r\n        <h3 className=\"alert__title\">\r\n          {alert.title}\r\n        </h3>\r\n        <div className=\"alert__content\">\r\n          {alert.content}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport {DefaultLayout} from \"../layouts/DefaultLayout\";\r\nimport './History.css';\r\n\r\nexport const History = () => {\r\n  return (\r\n    <DefaultLayout>\r\n      <div className=\"history\">\r\n        <h3 className=\"history__title\">\r\n          Список сыгранных вами игр\r\n        </h3>\r\n        <div className=\"history__content\">\r\n          \r\n        </div>\r\n      </div>\r\n    </DefaultLayout>\r\n  )\r\n}","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Switch, Route, useRouteMatch} from \"react-router-dom\";\r\nimport {Home} from \"./pages/Home\";\r\nimport {Memory} from \"./pages/Memory\";\r\nimport {Alert} from \"./components/Alert\";\r\nimport {pauseGame, startGame} from \"./redux/game/gameActions\";\r\nimport \"./styles.css\";\r\nimport {History} from \"./pages/History\";\r\n\r\nexport const App = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isMemory = useRouteMatch(\"/memory\");\r\n\r\n  dispatch(isMemory ? startGame() : pauseGame());\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Alert/>\r\n      <Switch>\r\n        <Route path=\"/history\">\r\n          <History/>\r\n        </Route>\r\n        <Route path=\"/memory\">\r\n          <Memory/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home/>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","export const DEFAULT = \"DEFAULT\";","const cards = [];\r\n\r\nnew Array(18).fill(\"\").forEach((_, index) => {\r\n  cards.push({\r\n    value: index + 1\r\n  });\r\n});\r\n\r\nexport default cards;\r\n","import {generateCardsToFind} from \"../../utils/gameHelpers\";\r\n\r\nexport const gameInitialState = {\r\n  gameSessionIsExist: false,\r\n  cardsToFind: generateCardsToFind(),\r\n  active: null, // Активный элемент\r\n};","import cards from \"../data/cards\";\r\n\r\nexport const generateCardsToFind = () => [...cards];","import {DEFAULT} from \"../types\";\r\nimport {END_SESSION, FOUND_CARD, SET_ACTIVE_ITEM, START_SESSION} from \"./gameTypes\";\r\nimport {gameInitialState} from \"./gameInitialState\";\r\n\r\nconst reducers = {\r\n  [DEFAULT]: (state) => {\r\n    return state;\r\n  },\r\n\r\n  [START_SESSION]: (state) => ({...state, gameSessionIsExist: true}),\r\n  [END_SESSION]: (state) => ({...state, gameSessionIsExist: false}),\r\n  [FOUND_CARD]: (state, payload) => ({...state, cardsToFind: state.cardsToFind.filter(card => card.value !== payload.value)}),\r\n  [SET_ACTIVE_ITEM]: (state, payload) => ({...state, active: payload}),\r\n};\r\n\r\nexport const gameReducer = (state = gameInitialState, action) => {\r\n  const reducer = reducers[action.type] || reducers[DEFAULT];\r\n\r\n  return reducer(state, action.payload);\r\n};","export const timerInitialState = {\r\n    time: 0,\r\n    interval: null\r\n};","import {timerInitialState} from \"./timerInitialState\";\r\nimport {DEFAULT} from \"../types\";\r\nimport {CLOSE_TIMER, DROP_TIME, INCREMENT_TIME, INIT_TIMER} from \"./timerTypes\";\r\n\r\nconst reducers = {\r\n    [DEFAULT]: state => {\r\n        return state;\r\n    },\r\n\r\n    [INIT_TIMER]: (state, payload) => ({...state, interval: payload}),\r\n    [CLOSE_TIMER]: (state) => ({...state, interval: null}),\r\n    [INCREMENT_TIME]: (state) => ({...state, time: state.time + 1}),\r\n    [DROP_TIME]: (state) => ({...state, time: 0}),\r\n};\r\n\r\nexport const timerReducer = (state = timerInitialState, action) => {\r\n    const reducer = reducers[action.type] || reducers[DEFAULT];\r\n\r\n    return reducer(state, action.payload);\r\n}","\r\nconst generateItem = (x, y, card) => ({isOpen: false, x, y, card});\r\n\r\nexport const generateCleanBoard = () => {\r\n  return new Array(6)\r\n    .fill(null)\r\n    .map((el) => new Array(6).fill(null));\r\n}\r\n\r\nexport const setItemOnBoard = (board, positions, card) => {\r\n  let rand = Math.floor(Math.random() * positions.length);\r\n  let [x, y] = positions.splice(rand, 1)[0];\r\n  board[x][y] = generateItem(x, y, card);\r\n};\r\n\r\nexport const changeItemOnBoard = (board, item) => {\r\n  const newRow = [...board[item.x]]\r\n  newRow[item.y] = item;\r\n  const newBoard = [...board];\r\n  newBoard[item.x] = newRow;\r\n  return newBoard;\r\n};","import {generateCleanBoard} from \"../../utils/boardHelpers\";\r\n\r\nexport const boardInitialState = {\r\n  board: generateCleanBoard(),\r\n};","import {boardInitialState} from \"./boardInitialState\";\r\nimport {DEFAULT} from \"../types\";\r\nimport {CLOSE_ITEM, GENERATE_BOARD, OPEN_ITEM} from \"./boardTypes\";\r\nimport {changeItemOnBoard, generateCleanBoard, setItemOnBoard} from \"../../utils/boardHelpers\";\r\n\r\nimport cards from \"../../data/cards\";\r\n\r\nconst reducers = {\r\n  [DEFAULT]: (state) => {\r\n    return state;\r\n  },\r\n\r\n  [GENERATE_BOARD]: (state) => {\r\n    const board = generateCleanBoard();\r\n\r\n    const positions = [];\r\n\r\n    board.forEach((row, x) => {\r\n      row.forEach((col, y) => {\r\n        positions.push([x, y])\r\n      })\r\n    })\r\n\r\n    cards.forEach(card => {\r\n      setItemOnBoard(board, positions, card);\r\n      setItemOnBoard(board, positions, card);\r\n    });\r\n\r\n    return {...state, board: board};\r\n  },\r\n\r\n  [OPEN_ITEM]: (state, payload) => {\r\n    const board = changeItemOnBoard(state.board, {...payload, isOpen: true});\r\n    return {...state, board};\r\n  },\r\n  [CLOSE_ITEM]: (state, payload) => {\r\n    const board = changeItemOnBoard(state.board, {...payload, isOpen: false});\r\n    return {...state, board};\r\n  }\r\n};\r\n\r\nexport const boardReducer = (state = boardInitialState, action) => {\r\n  const reducer = reducers[action.type] || reducers[DEFAULT];\r\n\r\n  return reducer(state, action.payload);\r\n}","export const alertInitialState = {\r\n  show: false,\r\n  title: null,\r\n  content: null,\r\n};","import {DEFAULT} from \"../types\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"./alertTypes\";\r\nimport {alertInitialState} from \"./alertInitialState\";\r\n\r\n\r\nconst reducers = {\r\n  [DEFAULT]: (state) => {\r\n    return state;\r\n  },\r\n\r\n  [SHOW_ALERT]: (state, payload) => ({...state, ...payload, show: true}),\r\n  [HIDE_ALERT]: (state) => ({...state, show: false})\r\n}\r\n\r\nexport const alertReducer = (state = alertInitialState, action) => {\r\n  const reducer = reducers[action.type] || reducers[DEFAULT];\r\n\r\n  return reducer(state, action.payload);\r\n}","import {combineReducers} from \"redux\";\r\nimport {gameReducer} from \"./game/gameReducer\";\r\nimport {timerReducer} from \"./timer/timerReducer\";\r\nimport {boardReducer} from \"./board/boardReducer\";\r\nimport {alertReducer} from \"./alert/alertReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  game: gameReducer,\r\n  timer: timerReducer,\r\n  board: boardReducer,\r\n\r\n  alert: alertReducer\r\n});","import React, {StrictMode} from \"react\";\r\nimport {render} from \"react-dom\";\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport {App} from \"./App\";\r\nimport {rootReducer} from \"./redux/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nconst store = createStore(rootReducer, compose(\r\n  applyMiddleware(thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nconst app = (\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <StrictMode>\r\n        <App/>\r\n      </StrictMode>\r\n    </Provider>\r\n  </BrowserRouter>\r\n);\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(\r\n  app,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}